#!/bin/bash
#  firewall script com iptables
#  
 
#===========================================
# Váriavies com as Cores
#===========================================
NONE="\033[0m" # Eliminar as Cores, deixar padrão)
NN="\033[0m" # Eliminar as Cores, deixar padrão)

## Efeito Negrito (bold) e cores
BK="\033[1;30m" # Bold+Black (Negrito+Preto)
BR="\033[1;31m" # Bold+Red (Negrito+Vermelho)
BG="\033[1;32m" # Bold+Green (Negrito+Verde)
BY="\033[1;33m" # Bold+Yellow (Negrito+Amarelo)
BB="\033[1;34m" # Bold+Blue (Negrito+Azul)
BM="\033[1;35m" # Bold+Magenta (Negrito+Vermelho Claro)
BC="\033[1;36m" # Bold+Cyan (Negrito+Ciano - Azul Claro)
BW="\033[1;37m" # Bold+White (Negrito+Branco)

## Cores Piscante
PCK="\033[5;30m" #Piscante+Black (Preto)
PCR="\033[5;31m" #Piscante+Red (Vermelho)
PCG="\033[5;32m" #Piscante+Green (Verde)
PCY="\033[5;33m" #Piscante+Yellow (Amarelo)
PCB="\033[5;34m" #Piscante+Blue (Azul)
PCM="\033[5;35m" #Piscante+Magenta (Vermelho Claro)
PCC="\033[5;36m" #Piscante+Cyan (Ciano - Azul Claro)
PCW="\033[5;37m" #Piscante+White (Branco)

modprobe ip_tables

function clean(){
echo -n -e " $BR◉$BW Limpando Regras ─────────────────╼ "
sleep 1

# Limpando as Chains
 iptables -F INPUT
 iptables -F OUTPUT
 iptables -F FORWARD
 iptables -F -t filter
 iptables -F POSTROUTING -t nat
 iptables -F PREROUTING -t nat
 iptables -F OUTPUT -t nat
 iptables -F -t nat
 iptables -t nat -F
 iptables -t mangle -F
 iptables -X
 
# Zerando contadores
 iptables -Z
 iptables -t nat -Z
 iptables -t mangle -Z
 
# Define politicas padrao ACCEPT
 iptables -P INPUT ACCEPT
 iptables -P OUTPUT ACCEPT
 iptables -P FORWARD ACCEPT
}

function AtivaPing(){
 echo -n -e " $BR◉$BW Ativando Resposta do Ping ───────╼ "
sleep 1

echo "0" > /proc/sys/net/ipv4/icmp_echo_ignore_all
}

function DesativaProtecao(){
 echo -n -e " $BR◉$BW Removendo Regras de Proteção ────╼ "
sleep 1

 i=/proc/sys/net/ipv4
 echo "1" > /proc/sys/net/ipv4/ip_forward
 echo "0" > $i/tcp_syncookies
 echo "0" > $i/icmp_echo_ignore_broadcasts
 echo "0" > $i/icmp_ignore_bogus_error_responses
 for i in /proc/sys/net/ipv4/conf/*; do
   echo "1" > $i/accept_redirects
   echo "1" > $i/accept_source_route
   echo "0" > $i/log_martians
   echo "0" > $i/rp_filter
 done
}

function limpatabelas(){
echo -n -e " $BG◉$BW Limpando Regras ─────────────────╼ "
sleep 1

# limpando tabelas
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X

}

function ativaprotecao(){
echo -n -e " $BG◉$BW Ativando Proteção ───────────────╼ "
sleep 1

# Ativando algumas coisas básicas do kernel
echo 1 > /proc/sys/net/ipv4/tcp_syncookies                     # Abilitar o uso de syncookies (muito útil para evitar SYN flood attacks)
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all               # desabilita o "ping" (Mensagens ICMP) para sua máquina
echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects          # Não aceite redirecionar pacotes ICMP
echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses  # Ative a proteção contra respostas a mensagens de erro falsas
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts        # Evita a peste do Smurf Attack e alguns outros de redes locais
}

function politicaspadrao(){
echo -n -e " $BG◉$BW Configurando Padrão ─────────────╼ "
sleep 1

# Configurando as políticas padrões
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP

# Loga/Adiciona/Descarta hosts da lista "SUSPEITO" (cuja conexão não cumpre nenhuma das regras acima) {deixe como última regra!}
iptables -A INPUT -p tcp --dport=20 -j LOG --log-level warning --log-prefix "[firewall] [ftp]"
iptables -A INPUT -p udp --dport=20 -j LOG --log-level warning --log-prefix "[firewall] [ftp]"
iptables -A INPUT -p tcp --dport=21 -j LOG --log-level warning --log-prefix "[firewall] [ftp]"
iptables -A INPUT -p udp --dport=21 -j LOG --log-level warning --log-prefix "[firewall] [ftp]"
iptables -A INPUT -p tcp --dport=22 -j LOG --log-level warning --log-prefix "[firewall] [ssh]"
iptables -A INPUT -p udp --dport=22 -j LOG --log-level warning --log-prefix "[firewall] [ssh]"
iptables -A INPUT -p tcp --dport=23 -j LOG --log-level warning --log-prefix "[firewall] [telnet]"
iptables -A INPUT -p udp --dport=23 -j LOG --log-level warning --log-prefix "[firewall] [telnet]"
iptables -A INPUT -p icmp  -j LOG --log-level warning --log-prefix "[firewall] [ping]"
}


function permitirloop(){
echo -n -e " $BG◉$BW Permitindo Loopback ─────────────╼ "
sleep 1

# Permitindo loopback
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Permite o estabelecimento de novas conexões iniciadas por você // coração do firewall //
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED,NEW -j ACCEPT
}

function dns(){
echo -n -e " $BG◉$BW Ativando DNS ────────────────────╼ "
sleep 1

# Libera o acesso do DNS (troque pelo seu, caso não use o DNS do google. Caso não saiba exclua a opção -s apagando até antes do -j)
iptables -A INPUT -p udp --sport 53  -j ACCEPT
iptables -A INPUT -p udp --sport 53  -j ACCEPT

# Liberando portas de serviços externos (descomente e altere conforme sua necessidade)
#iptables -A INPUT -p tcp -m multiport --dport 21,22,53,80,443,3128,8080 -j ACCEPT

#--- Criando listas de bloqueios

# Descarta pacotes reincidentes/persistentes da lista SUSPEITO (caso tenha 5 entradas ficará 1H em DROP / caso tenha 10 ficará 24H em DROP)
iptables -A INPUT -m recent --update --hitcount 10 --name SUSPEITO --seconds 86400 -j DROP
iptables -A INPUT -m recent --update --hitcount 5 --name SUSPEITO --seconds 3600 -j DROP

# Descarta pacotes reincidentes/persistentes da lista SYN-DROP (caso tenha 5 entradas ficará 1H em DROP / caso tenha 10 ficará 24H em DROP)
iptables -A INPUT -m recent --update --hitcount 10 --name SYN-DROP --seconds 86400 -j DROP
iptables -A INPUT -m recent --update --hitcount 5 --name SYN-DROP --seconds 3600 -j DROP
}

function criachain(){
echo -n -e " $BG◉$BW Criando Chains ──────────────────╼ "
sleep 1

# Cria a CHAIN "SYN"
iptables -N SYN
iptables -A SYN -m limit --limit 10/min --limit-burst 3 -j LOG --log-level warning --log-prefix "[firewall] [SYN: DROP]"
iptables -A SYN -m limit --limit 10/min --limit-burst 3 -m recent --set --name SYN-DROP -j DROP
iptables -A SYN -m limit --limit 1/min --limit-burst 1 -j LOG --log-level warning --log-prefix "[firewall] [SYN: FLOOD!]"
iptables -A SYN -j DROP

# Cria a CHAIN "SCANNER"
iptables -N SCANNER
iptables -A SCANNER -m limit --limit 10/min --limit-burst 3 -j LOG --log-level warning --log-prefix "[firewall] [SCANNER: DROP]"
iptables -A SCANNER -m limit --limit 10/min --limit-burst 3 -m recent --set --name SUSPEITO -j DROP
iptables -A SCANNER -m limit --limit 1/min --limit-burst 1 -j LOG --log-level warning --log-prefix "[firewall] [SCANNER: FLOOD!]"
iptables -A SCANNER -j DROP

#### Bloqueios

# Rejeita os restos de pacotes após fechar o torrent (subistitua 12300 pela porta do seu torrent)
iptables -A INPUT -p tcp --dport 12300 -j REJECT
iptables -A INPUT -p udp --dport 12300 -j DROP

# Manda os pacotes SYN suspeitos (não liberados acima) para a chain "SYN"
iptables -A INPUT -p tcp --syn -m state --state NEW -j SYN

# Adicionando regras para CHAIN "SCANNER"
iptables -A INPUT -p tcp --tcp-flags ALL NONE -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL ALL -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL ACK -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL SYN,ACK -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL FIN,PSH,URG -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL FIN,URG,PSH -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL PSH,URG,FIN -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL URG,PSH,FIN -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL FIN,SYN -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j SCANNER
iptables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j SCANNER
iptables -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j SCANNER
iptables -A INPUT -p tcp --tcp-flags ALL FIN -j SCANNER

# Descarta pacotes inválidos
iptables -A INPUT -m state --state INVALID -j DROP


#bloqueia portas
iptables -A INPUT -p tcp --dport=20 -j DROP
iptables -A INPUT -p udp --dport=20 -j DROP
iptables -A INPUT -p tcp --dport=21 -j DROP
iptables -A INPUT -p udp --dport=21 -j DROP
iptables -A INPUT -p tcp --dport=22 -j DROP
iptables -A INPUT -p udp --dport=22 -j DROP
iptables -A INPUT -p tcp --dport=23 -j DROP
iptables -A INPUT -p udp --dport=23 -j DROP
iptables -A INPUT -m recent --update --name SUSPEITO -m limit --limit 10/min --limit-burst 3 -j LOG --log-level warning --log-prefix "[firewall] [suspeito]"
iptables -A INPUT -m limit --limit 10/min --limit-burst 3 -m recent --set --name SUSPEITO -j DROP
iptables -A INPUT -j DROP
}


#### START ####

function start(){

clear
echo -e "$BW ======================"
echo -e " ==== [$BG Firewall$BW ] ===="
echo -e "$BW ======================"
echo

 if limpatabelas
  then
   echo -e " [$BG✔$BW] "
sleep 1
  else
   echo -e "[$BR✘$BW]"
sleep 1
fi
 if ativaprotecao
  then
   echo -e " [$BG✔$BW] "
sleep 1
  else
   echo -e "[$BR✘$BW]"
sleep 1 
fi
 if politicaspadrao
  then
   echo -e " [$BG✔$BW] "
sleep 1
  else
   echo -e "[$BR✘$BW]"
sleep 1
 fi
 if permitirloop
  then
   echo -e " [$BG✔$BW] "
sleep 1
  else
   echo -e "[$BR✘$BW]"
sleep 1
 fi
 if dns
  then
   echo -e " [$BG✔$BW] "
sleep 1
  else
   echo -e "[$BR✘$BW]"
sleep 1
 fi
 if criachain
  then
   echo -e " [$BG✔$BW] "
sleep 1
  else
   echo -e "[$BR✘$BW]"
sleep 1
 fi

echo -e "\n $BG ✔$BW Firewall$PCG Ativado$BW"
echo -e "\n"
}

#### STOP ####

function stop(){

clear
echo -e "$BW ======================"
echo -e " ==== [$BR Firewall$BW ] ===="
echo -e "$BW ======================"
echo

 if clean
  then
   echo -e " [$BG✔$BW] "
sleep 1
  else
   echo -e "[$BR✘$BW]"
sleep 1
 fi
 if AtivaPing
  then
   echo -e " [$BG✔$BW] "
sleep 1
  else
   echo -e "[$BR✘$BW]"
sleep 1
 fi
 if DesativaProtecao
  then
   echo -e " [$BG✔$BW] "
sleep 1
  else
   echo -e "[$BR✘$BW]"
sleep 1
 fi
 # Lista de Funções executadas
 #LimpaRegras
 #AtivaPing
 #DesativaProtecao
echo -e  -n "\n $BR ✘$BW Firewall$PCM Desativado$BW"
echo -e "\n"
}

#### INICIAR ####

case $1 in
  start)
   start
   exit 0
  ;;

  stop)
   stop
  ;;
 
  *)
clear
echo -e "$BW ======================"
echo -e " ==== [$BC Firewall$BW ] ===="
echo -e "$BW ======================"
echo
echo -e " Escolha uma opção válida \n Ex: firewall$BG start$BW |$BR stop "
echo
esac
